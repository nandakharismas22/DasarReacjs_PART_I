{"ast":null,"code":"var _jsxFileName = \"D:\\\\KULIYAH NDU\\\\MAGANG\\\\belajar mandiri\\\\week1\\\\Desert_Tour\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//PERCOBAAN 1 (Creating and nesting components )\n\n// function MyButton() {\n//   return (\n//     <button>\n//       Saya adalah tombol\n//     </button>\n//   );\n// }\n\n// export default function MyApp() {\n//   return (\n//     <div>\n//       <h1>Selamat datang di aplikasi saya</h1>\n//       <MyButton />\n//     </div>\n//   );\n// }\n\n//PERCOBAAN 2 (How to to add markup & styles Untuk mendisplay Data)\n\n// const user = {\n//   name: 'Nanda Kharisma Safitri',\n//   imageUrl: 'https://i.imgur.com/yXOvdOSs.jpg',\n//   imageSize: 90,\n// };\n\n// export default function Profile() {\n//   return (\n//     //markup\n//     <> \n//       <h1>{user.name}</h1>\n//       <img\n//         className=\"avatar\"\n//         src={user.imageUrl}\n//         alt={'Foto ' + user.name}\n//         style={{\n//           width: user.imageSize,\n//           height: user.imageSize\n//         }}\n//       />\n//     </>//markup\n//   );\n// }\n\n// PERCOBAAN 3 (How to render conditions and lists)\nconst products = [{\n  title: 'Kubis',\n  isFruit: false,\n  id: 1\n},\n// Produk non-buah\n{\n  title: 'Bawang Putih',\n  isFruit: false,\n  id: 2\n},\n// Produk non-buah\n{\n  title: 'Apel',\n  isFruit: true,\n  id: 3\n} // Produk buah\n];\n\nexport default function ShoppingList() {\n  // 1. Merender daftar produk menggunakan .map()\n  //    - Di sini, `products.map()` digunakan untuk mengubah array `products` menjadi elemen-elemen <li> yang dapat ditampilkan dalam list.\n  const listItems = products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n    // 2. Atribut key untuk mengidentifikasi item secara unik\n    style: {\n      // 3. Kondisi render: Memeriksa apakah produk adalah buah atau bukan dan mengubah warna teks berdasarkan kondisi tersebut.\n      color: product.isFruit ? 'magenta' : 'darkgreen' // Jika `isFruit` true, warna teks magenta, jika false, darkgreen.\n    },\n    children: [product.title, \"  \"]\n  }, product.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n\n  // 4. Merender daftar item sebagai <ul> dengan elemen <li> yang sudah dibuat sebelumnya\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: listItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this) // 5. Menampilkan seluruh daftar produk dalam sebuah unordered list (<ul>)\n  ;\n}\n_c = ShoppingList;\nvar _c;\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"names":["products","title","isFruit","id","ShoppingList","listItems","map","product","_jsxDEV","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/KULIYAH NDU/MAGANG/belajar mandiri/week1/Desert_Tour/src/App.js"],"sourcesContent":["//PERCOBAAN 1 (Creating and nesting components )\r\n\r\n// function MyButton() {\r\n//   return (\r\n//     <button>\r\n//       Saya adalah tombol\r\n//     </button>\r\n//   );\r\n// }\r\n\r\n// export default function MyApp() {\r\n//   return (\r\n//     <div>\r\n//       <h1>Selamat datang di aplikasi saya</h1>\r\n//       <MyButton />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n//PERCOBAAN 2 (How to to add markup & styles Untuk mendisplay Data)\r\n\r\n// const user = {\r\n//   name: 'Nanda Kharisma Safitri',\r\n//   imageUrl: 'https://i.imgur.com/yXOvdOSs.jpg',\r\n//   imageSize: 90,\r\n// };\r\n\r\n// export default function Profile() {\r\n//   return (\r\n//     //markup\r\n//     <> \r\n//       <h1>{user.name}</h1>\r\n//       <img\r\n//         className=\"avatar\"\r\n//         src={user.imageUrl}\r\n//         alt={'Foto ' + user.name}\r\n//         style={{\r\n//           width: user.imageSize,\r\n//           height: user.imageSize\r\n//         }}\r\n//       />\r\n//     </>//markup\r\n//   );\r\n// }\r\n\r\n// PERCOBAAN 3 (How to render conditions and lists)\r\nconst products = [\r\n  { title: 'Kubis', isFruit: false, id: 1 },  // Produk non-buah\r\n  { title: 'Bawang Putih', isFruit: false, id: 2 },  // Produk non-buah\r\n  { title: 'Apel', isFruit: true, id: 3 },  // Produk buah\r\n];\r\n\r\nexport default function ShoppingList() {\r\n  // 1. Merender daftar produk menggunakan .map()\r\n  //    - Di sini, `products.map()` digunakan untuk mengubah array `products` menjadi elemen-elemen <li> yang dapat ditampilkan dalam list.\r\n  const listItems = products.map(product =>\r\n    <li\r\n      key={product.id}  // 2. Atribut key untuk mengidentifikasi item secara unik\r\n      style={{\r\n        // 3. Kondisi render: Memeriksa apakah produk adalah buah atau bukan dan mengubah warna teks berdasarkan kondisi tersebut.\r\n        color: product.isFruit ? 'magenta' : 'darkgreen'  // Jika `isFruit` true, warna teks magenta, jika false, darkgreen.\r\n      }}\r\n    >\r\n      {product.title}  {/* Menampilkan nama produk */}\r\n    </li>\r\n  );\r\n\r\n  // 4. Merender daftar item sebagai <ul> dengan elemen <li> yang sudah dibuat sebelumnya\r\n  return (\r\n    <ul>{listItems}</ul>  // 5. Menampilkan seluruh daftar produk dalam sebuah unordered list (<ul>)\r\n  );\r\n}"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,QAAQ,GAAG,CACf;EAAEC,KAAK,EAAE,OAAO;EAAEC,OAAO,EAAE,KAAK;EAAEC,EAAE,EAAE;AAAE,CAAC;AAAG;AAC5C;EAAEF,KAAK,EAAE,cAAc;EAAEC,OAAO,EAAE,KAAK;EAAEC,EAAE,EAAE;AAAE,CAAC;AAAG;AACnD;EAAEF,KAAK,EAAE,MAAM;EAAEC,OAAO,EAAE,IAAI;EAAEC,EAAE,EAAE;AAAE,CAAC,CAAG;AAAA,CAC3C;;AAED,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC;EACA;EACA,MAAMC,SAAS,GAAGL,QAAQ,CAACM,GAAG,CAACC,OAAO,iBACpCC,OAAA;IACoB;IAClBC,KAAK,EAAE;MACL;MACAC,KAAK,EAAEH,OAAO,CAACL,OAAO,GAAG,SAAS,GAAG,WAAW,CAAE;IACpD,CAAE;IAAAS,QAAA,GAEDJ,OAAO,CAACN,KAAK,EAAC,IAAE;EAAA,GANZM,OAAO,CAACJ,EAAE;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOb,CACN,CAAC;;EAED;EACA,oBACEP,OAAA;IAAAG,QAAA,EAAKN;EAAS;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAE;EAAA;AAE1B;AAACC,EAAA,GAnBuBZ,YAAY;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}